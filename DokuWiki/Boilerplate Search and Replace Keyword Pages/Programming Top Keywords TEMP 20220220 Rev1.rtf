{\rtf1\ansi\ansicpg1252\deff0\nouicompat\deflang1033{\fonttbl{\f0\fnil\fcharset0 Calibri;}}
{\*\generator Riched20 10.0.19041}\viewkind4\uc1 
\pard\sa200\sl276\slmult1\f0\fs22\lang9 =================================================================\par
BE SURE THAT ALL ITEMS ARE PLURAL and the singular redirects to the plural!\par
\par
[[Programming languages]], [[abstraction]], [[agile]], [[Ahead-of-time (AOT)]], [[AI]], [[algebraic data types]], [[algorithms]], [[Android]], [[anonymous functions]], [[anonymous methods]], [[AOP]], [[AOT]], [[APIs]], [[arguments]], [[ARM]], [[arithmetic]], [[arrays]], [[aspect-oriented]], [[assignment]], [[associative arrays]], [[async]], [[asynchronous callbacks]], [[asynchronous programming]], [[automatic variables]], [[automation]], [[Avro]], [[backend]], [[backwards compatibility]], [[block scoped]], [[Booleans]], [[Boolean expressions]], [[buffer overflow]], [[builds]], [[Built-in types]], [[bytecode]], [[cache]], [[caching]], [[call by reference]], [[call by value]], [[callbacks]], [[call stack]], [[casting]], [[characters]], [[Chocolatey]], [[CI/CD]], [[classes]], [[CLI]], [[client-side]], [[closures]], [[cloud]] ([[Cloud Native]]-[[AWS]]-[[Azure]]-[[GCP]]-[[IBM Cloud]]-[[IBM Mainframe]]-[[OCI]]), [[codesmells]], [[coercion]], [[collections]], [[command-line interface]], [[commands]], [[comments]], [[compilers]], [[complex numbers]], [[composition]], [[concurrency]], [[concurrent programming]], [[conditional expressions]], [[conferences]], [[constants]], [[constructors]], [[containers]], [[control flow]], [[control structures]], [[coroutines]], [[crashes]], [[creators]], [[currying]], [[databases]], [[data manipulation]], [[data persistence]], [[data science]], [[data serialization]], [[data structures]], [[data synchronization]], [[dates]], [[dates and times]], [[deadlocks]], [[debugging]], [[declarative]], [[deferred callbacks]], [[delegates]], [[delegation]], [[dependency injection]], [[design patterns]], [[designers]], [[destructors]], [[DevOps]], [[dictionaries]], [[dictionary comprehensions]], [[DI]], [[distributed software]], [[distributions]], [[distros]], [[DL]], [[Docker]], [[do-while]], [[DSL]], [[duck typing]], [[dynamic binding]], [[dynamic scope]], [[dynamically scoped]], [[dynamically typed]], [[dynamic variables]], [[eager evaluation]], [[embedded]], [[encapsulation]], [[encryption]], [[enumerated types]], [[enumeration]], [[enums]], [[environment variables]], [[errors]], [[error handling]], [[evaluation strategy]], [[event-driven]], [[event handlers]], [[event loops]], [[exception handling]], [[executables]], [[execution]], [[expressions]], [[FaaS]], [[Facebook]], [[fibers]], [[fields]], [[file input/output]], [[file synchronization]], [[file I/O]], [[filter]], [[first-class functions]], [[fold]], [[foreach loops]], [[fork-join]], [[floating-point]], [[FP]], [[frameworks]], [[FreeBSD]], [[frontend]], [[functions]], [[functional]], [[functional programming]], [[function overloading]], [[garbage collection]], [[generators]], [[generator expressions]], [[generics]], [[generic programming]], [[GitHub]], [[global variables]], [[GraphQL]], [[gRPC]], [[GUI]], [[hashing]], [[heap]], [[heap allocation]], [[hello world]], [[higher-order functions]], [[history]], [[Homebrew]], [[HTTP]], [[idempotence]], [[IDEs]], [[import]], [[imperative]], [[immutable values]], [[immutability]], [[inheritance]], [[influenced]], [[influenced by]], [[installation]], [[integers]], [[integration testing]], [[interfaces]], [[internationalization]], [[interpreters]], [[interprocess communication (IPC)]], [[iOS]], [[IoT]], [[IPCs]], [[ISO Standard]], [[iteration]], [[JetBrains]], [[JIT]], [[JSON]], [[JSON-RPC]], [[JSON Web Tokens]], [[JSON Web Token (JWT)]], [[Just-in-time (JIT)]], [[JWT]], [[K8S]], [[keywords]], [[lambdas]], [[lambda expressions]], [[lambda functions]], [[language spec]], [[lazy evaluation]], [[lexically scoped]], [[lexical scoping]], [[libraries]], [[linters]], [[Linux]], [[lists]], [[list comprehensions]], [[literals]], [[localization]], [[local variables]], [[locks]], [[logging]], [[logo]], [[looping]], [[loosely typed]], [[loose typing]], [[macOS]], [[map]], [[mascot]], [[math]], [[member variables]], [[memoization]], [[memory addressing]], [[memory allocation]], [[malloc]], [[memory management]], [[memory safety]], [[message queues]], [[metaclasses]], [[meta-programming]], [[methods]], [[method overloading]], [[MFA]], [[ML]], [[microservices]], [[Microsoft]], [[mobile dev]], [[modules]], [[modulo operators]], [[monitoring]], [[multiprocessing]], [[multi-threaded]], [[mutable values]], [[mutability]], [[mutex]] ([[mutual exclusion]]), [[namespaces]], [[natural language processing (NLP)]], [[networking]], [[network programming]], [[NLP]], [[non-blocking]], [[non-blocking I/O]], [[null]], [[null reference]], [[null coalescing operators]], [[numbers]], [[number precision]], [[OAuth]], [[objects]], [[object code]], [[object comparisons]], [[object creation]], [[object creators]], [[object destruction]], [[object destructors]], [[object lifetime]], [[object-oriented constructors]], [[object-oriented programming]], [[object serialization]], [[observability]], [[OOP]], [[operators]], [[operator overloading]], [[optimizations]], [[organizations]], [[ORMs]], [[packages]], [[package managers]], [[pass by reference]], [[pass by value]], [[parallel computing]], [[parallel programming]], [[parallelism]], [[parameters]], [[people]], [[performance]], [[persistence]], [[pipelines]], [[pointers]], [[polymorphism]], [[primitives]], [[primitive data types]], [[probability]], [[procedural]], [[processes]], [[producer-consumer]], [[programmers]], [[programming]], [[programming paradigm]], [[program structure]], [[program termination]], [[Protocol Buffers (Protobuf)]], [[Protocol Buffers]], [[Protobuf]], [[proxies]], [[public-key encryption]], [[PKI]], [[pure functions]], [[race conditions]], [[random]], [[reactive]], [[readability]], [[records]], [[recursion]], [[reentrancy]], [[refactoring]], [[reference counting]], [[reference types]], [[referential transparency]], [[reflection]], [[regex]], [[remote procedure calls (RPC)]], [[REPL]], [[reserved words]], [[REST]], [[REST APIs]], [[RHEL]], [[RPCs]], [[runtimes]], [[safe navigation operators]], [[SDK]], [[secrets]], [[security]], [[serialization]], [[serverless]], [[server-side]], [[sets]], [[set comprehensions]], [[side effects]], [[signed integers]], [[SMTP]], [[Snapcraft]], [[social media]], [[sockets]], [[source code]], [[source-to-source compiler]], [[SQL]], [[SSL]] - [[SSL-TLS]], [[Single sign-on (SSO)]], [[SSO]], [[StackOverflow]], [[stack]], [[stack allocation]], [[Stack overflow]], [[standards]], [[standard errors]], [[standard input]], [[standard library]], [[standard operators]], [[standard output]], [[state]], [[statements]], [[strings]], [[string concatenation]], [[string functions]], [[string operations]], [[scheduling]], [[scientific notation]], [[scope]], [[scope rules]], [[scoping]], [[scripting]], [[static analyzers]], [[statically scoped]], [[static scoping]], [[statically typed]], [[static variables]], [[statistics]], [[strongly typed]], [[structural typing]], [[synchronization]], [[syntax]], [[systems programming]], [[TCP/IP]], [[TDD]], [[testing]], [[test frameworks]], [[threads]], [[thread-local storage (TLS)]], [[TLS]], [[thread locking]], [[thread locks]], [[thread safety]], [[thread scheduling]], [[thread synchronization]], [[times]], [[timers]], [[to JavaScript]], [[tools]], [[toolchain]], [[transpiler]], [[transpiling to JavaScript]], [[truth values]], [[tuples]], [[type checking]], [[type conversion]], [[type inference]], [[type safety]], [[type system]], [[web dev]], [[while loops]], [[work stealing]], [[values]], [[value types]], [[variables]], [[variable lifetime]], [[variable scope]], [[versions]], [[virtual environments]], [[virtual machine]], [[Ubuntu]], [[Unicode]], [[unit testing]], [[unsigned integers]], [[usability]], [[weak typing]], [[weakly typed]], [[Windows]], [[wrappers]], [[written using]], [[x86-64]]-[[AMD64]], [[XML]], [[YAML]]; \par
\par
\par
=================================================================\par
BE SURE THAT ALL ITEMS ARE PLURAL and the singular redirects to the plural!\par
\par
[[Programming]] [[language]], [[abstraction]], [[agile]], A[[head]]-of-[[time]] ([[AOT]]), [[AI]], [[algebraic]] [[data type]], [[algorithm]], [[Android]], [[anonymous]] [[function]], [[anonymous method]], [[AOP]], [[AOT]], [[API]], [[argument]], [[ARM]], [[arithmetic]], [[array]], [[aspect]]-[[oriented]], [[assignment]], [[associative]] [[array]], [[async]], [[asynchronous]] [[callback]], [[asynchronous]] [[programming]], [[automatic]] [[variable]], [[automation]], [[Avro]], [[backend]], [[backwards]] [[compatibility]], [[block]] [[scoped]], [[Boolean]], [[Boolean]] [[expression]], [[buffer overflow]], [[build]], [[Built-in type]], [[bytecode]], [[cache]], [[caching]], [[call by reference]], [[call by value]], [[callback]], [[call stack]], [[casting]], [[character]], [[Chocolatey]], [[CI/CD]], [[classe]], [[CLI]], [[client-side]], [[closure]], [[cloud]] ([[Cloud Native]]-[[AWS]]-[[Azure]]-[[GCP]]-[[IBM Cloud]]-[[IBM Mainframe]]-[[OCI]]), [[codesmell]], [[coercion]], [[collection]], [[command-line interface]], [[command]], [[comment]], [[compiler]], [[complex number]], [[composition]], [[concurrency]], [[concurrent programming]], [[conditional expression]], [[conference]], [[constant]], [[constructor]], [[container]], [[control flow]], [[control structure]], [[coroutine]], [[crashe]], [[creator]], [[currying]], [[database]], [[data manipulation]], [[data persistence]], [[data science]], [[data serialization]], [[data structure]], [[data synchronization]], [[date]], [[dates and time]], [[deadlock]], [[debugging]], [[declarative]], [[deferred callback]], [[delegate]], [[delegation]], [[dependency injection]], [[design pattern]], [[designer]], [[destructor]], [[DevOp]], [[dictionarie]], [[dictionary comprehension]], [[DI]], [[distributed software]], [[distribution]], [[distro]], [[DL]], [[Docker]], [[do-while]], [[DSL]], [[duck typing]], [[dynamic binding]], [[dynamic scope]], [[dynamically scoped]], [[dynamically typed]], [[dynamic variable]], [[eager evaluation]], [[embedded]], [[encapsulation]], [[encryption]], [[enumerated type]], [[enumeration]], [[enum]], [[environment variable]], [[error]], [[error handling]], [[evaluation strategy]], [[event-driven]], [[event handler]], [[event loop]], [[exception handling]], [[executable]], [[execution]], [[expression]], [[FaaS]], [[Facebook]], [[fiber]], [[field]], [[file input/output]], [[file synchronization]], [[file I/O]], [[filter]], [[first-class function]], [[fold]], [[foreach loop]], [[fork-join]], [[floating-point]], [[FP]], [[framework]], [[FreeBSD]], [[frontend]], [[function]], [[functional]], [[functional programming]], [[function overloading]], [[garbage collection]], [[generator]], [[generator expression]], [[generic]], [[generic programming]], [[GitHub]], [[global variable]], [[GraphQL]], [[gRPC]], [[GUI]], [[hashing]], [[heap]], [[heap allocation]], [[hello world]], [[higher-order function]], [[history]], [[Homebrew]], [[HTTP]], [[idempotence]], [[IDE]], [[import]], [[imperative]], [[immutable value]], [[immutability]], [[inheritance]], [[influenced]], [[influenced by]], [[installation]], [[integer]], [[integration testing]], [[interface]], [[internationalization]], [[interpreter]], [[interprocess communication (IPC)]], [[iOS]], [[IoT]], [[IPC]], [[ISO Standard]], [[iteration]], [[JetBrain]], [[JIT]], [[JSON]], [[JSON-RPC]], [[JSON Web Token]], [[JSON Web Token (JWT)]], [[Just-in-time (JIT)]], [[JWT]], [[K8S]], [[keyword]], [[lambda]], [[lambda expression]], [[lambda function]], [[language spec]], [[lazy evaluation]], [[lexically scoped]], [[lexical scoping]], [[librarie]], [[linter]], [[Linux]], [[list]], [[list comprehension]], [[literal]], [[localization]], [[local variable]], [[lock]], [[logging]], [[logo]], [[looping]], [[loosely typed]], [[loose typing]], [[macOS]], [[map]], [[mascot]], [[math]], [[member variable]], [[memoization]], [[memory addressing]], [[memory allocation]], [[malloc]], [[memory management]], [[memory safety]], [[message queue]], [[metaclasse]], [[meta-programming]], [[method]], [[method overloading]], [[MFA]], [[ML]], [[microservice]], [[Microsoft]], [[mobile dev]], [[module]], [[modulo operator]], [[monitoring]], [[multiprocessing]], [[multi-threaded]], [[mutable value]], [[mutability]], [[mutex]] ([[mutual exclusion]]), [[namespace]], [[natural language processing (NLP)]], [[networking]], [[network programming]], [[NLP]], [[non-blocking]], [[non-blocking I/O]], [[null]], [[null reference]], [[null coalescing operator]], [[number]], [[number precision]], [[OAuth]], [[object]], [[object code]], [[object comparison]], [[object creation]], [[object creator]], [[object destruction]], [[object destructor]], [[object lifetime]], [[object-oriented constructor]], [[object-oriented programming]], [[object serialization]], [[observability]], [[OOP]], [[operator]], [[operator overloading]], [[optimization]], [[organization]], [[ORM]], [[package]], [[package manager]], [[pass by reference]], [[pass by value]], [[parallel computing]], [[parallel programming]], [[parallelism]], [[parameter]], [[people]], [[performance]], [[persistence]], [[pipeline]], [[pointer]], [[polymorphism]], [[primitive]], [[primitive data type]], [[probability]], [[procedural]], [[processe]], [[producer-consumer]], [[programmer]], [[programming]], [[programming paradigm]], [[program structure]], [[program termination]], [[Protocol Buffers (Protobuf)]], [[Protocol Buffer]], [[Protobuf]], [[proxie]], [[public-key encryption]], [[PKI]], [[pure function]], [[race condition]], [[random]], [[reactive]], [[readability]], [[record]], [[recursion]], [[reentrancy]], [[refactoring]], [[reference counting]], [[reference type]], [[referential transparency]], [[reflection]], [[regex]], [[remote procedure calls (RPC)]], [[REPL]], [[reserved word]], [[REST]], [[REST API]], [[RHEL]], [[RPC]], [[runtime]], [[safe navigation operator]], [[SDK]], [[secret]], [[security]], [[serialization]], [[serverles]], [[server-side]], [[set]], [[set comprehension]], [[side effect]], [[signed integer]], [[SMTP]], [[Snapcraft]], [[social media]], [[socket]], [[source code]], [[source-to-source compiler]], [[SQL]], [[SSL]] - [[SSL-TLS]], [[Single sign-on (SSO)]], [[SSO]], [[StackOverflow]], [[stack]], [[stack allocation]], [[Stack overflow]], [[standard]], [[standard error]], [[standard input]], [[standard library]], [[standard operator]], [[standard output]], [[state]], [[statement]], [[string]], [[string concatenation]], [[string function]], [[string operation]], [[scheduling]], [[scientific notation]], [[scope]], [[scope rule]], [[scoping]], [[scripting]], [[static analyzer]], [[statically scoped]], [[static scoping]], [[statically typed]], [[static variable]], [[statistic]], [[strongly typed]], [[structural typing]], [[synchronization]], [[syntax]], [[systems programming]], [[TCP/IP]], [[TDD]], [[testing]], [[test framework]], [[thread]], [[thread-local storage (TLS)]], [[TLS]], [[thread locking]], [[thread lock]], [[thread safety]], [[thread scheduling]], [[thread synchronization]], [[time]], [[timer]], [[to JavaScript]], [[tool]], [[toolchain]], [[transpiler]], [[transpiling to JavaScript]], [[truth value]], [[tuple]], [[type checking]], [[type conversion]], [[type inference]], [[type safety]], [[type system]], [[web dev]], [[while loop]], [[work stealing]], [[value]], [[value type]], [[variable]], [[variable lifetime]], [[variable scope]], [[version]], [[virtual environment]], [[virtual machine]], [[Ubuntu]], [[Unicode]], [[unit testing]], [[unsigned integer]], [[usability]], [[weak typing]], [[weakly typed]], [[Window]], [[wrapper]], [[written using]], [[x86-64]]-[[AMD64]], [[XML]], [[YAML]]; \par
\par
\par
----\par
\par
\par
\par
[[core]] of the [[Java language]] ([[core]] [[Java language]], [[Java language]] [[core]]). [[Java]] [[variable]]s, [[Java]] [[data type]]s, [[Java]] [[expression]]s, [[Java]] [[control flow]], [[Java]] [[function]], [[Java]] [[method]], [[Java]] [[class]], [[Java]] [[object]], [[Java]] [[I/O]], [[Java]] [[input/output]], [[Java]] [[IO]]. [[Java]] [[module]]s, [[Java]] [[script]], [[Java]] [[package]]\par
\par
[[core]] of the [[JavaScript language]] ([[core]] [[JavaScript language]], [[JavaScript language]] [[core]]). [[JavaScript]] [[variable]]s, [[JavaScript]] [[data type]]s, [[JavaScript]] [[expression]]s, [[JavaScript]] [[control flow]], [[JavaScript]] [[function]], [[JavaScript]] [[method]], [[JavaScript]] [[class]], [[JavaScript]] [[object]], [[JavaScript]] [[I/O]], [[JavaScript]] [[input/output]], [[JavaScript]] [[IO]]. [[JavaScript]] [[module]]s, [[JavaScript]] [[script]], [[JavaScript]] [[package]]\par
\par
\par
[[core]] of the [[TypeScript language]] ([[core]] [[TypeScript language]], [[TypeScript language]] [[core]]). [[TypeScript]] [[variable]]s, [[TypeScript]] [[data type]]s, [[TypeScript]] [[expression]]s, [[TypeScript]] [[control flow]], [[TypeScript]] [[function]], [[TypeScript]] [[method]], [[TypeScript]] [[class]], [[TypeScript]] [[object]], [[TypeScript]] [[I/O]], [[TypeScript]] [[input/output]], [[TypeScript]] [[IO]]. [[TypeScript]] [[module]]s, [[TypeScript]] [[script]], [[TypeScript]] [[package]]\par
\par
[[core]] of the [[Python language]] ([[core]] [[Python language]], [[Python language]] [[core]]). [[Python]] [[variable]]s, [[Python]] [[data type]]s, [[Python]] [[expression]]s, [[Python]] [[control flow]], [[Python]] [[function]], [[Python]] [[method]], [[Python]] [[class]], [[Python]] [[object]], [[Python]] [[I/O]], [[Python]] [[input/output]], [[Python]] [[IO]]. [[Python]] [[module]]s, [[Python]] [[script]], [[Python]] [[package]]\par
\par
[[core]] of the [[Kotlin]] [[language]] ([[core]] [[Kotlin language]], [[Kotlin language]] [[core]]). [[Kotlin]] [[variable]]s, [[Kotlin]] [[data type]]s, [[Kotlin]] [[expression]]s, [[Kotlin]] [[control flow]], [[Kotlin]] [[function]], [[Kotlin]] [[method]], [[Kotlin]] [[class]], [[Kotlin]] [[object]], [[Kotlin]] [[I/O]], [[Kotlin]] [[input/output]], [[Kotlin]] [[IO]]. [[Kotlin]] [[module]]s, [[Kotlin]] [[script]], [[Kotlin]] [[package]]\par
\par
[[core]] of the [[Scala]] [[language]] ([[core]] [[Scala language]], [[Scala language]] [[core]]). [[Scala]] [[variable]]s, [[Scala]] [[data type]]s, [[Scala]] [[expression]]s, [[Scala]] [[control flow]], [[Scala]] [[function]], [[Scala]] [[method]], [[Scala]] [[class]], [[Scala]] [[object]], [[Scala]] [[I/O]], [[Scala]] [[input/output]], [[Scala]] [[IO]]. [[Scala]] [[module]]s, [[Scala]] [[script]], [[Scala]] [[package]]\par
\par
\par
[[core]] of the [[C]] [[language]] ([[core]] [[C language]], [[C language]] [[core]]). [[C]] [[variable]]s, [[C]] [[data type]]s, [[C]] [[expression]]s, [[C]] [[control flow]], [[C]] [[function]], [[C]] [[method]], [[C]] [[class]], [[C]] [[object]], [[C]] [[I/O]], [[C]] [[input/output]], [[C]] [[IO]]. [[C]] [[module]]s, [[C]] [[script]], [[C]] [[package]]\par
\par
[[core]] of the [[Rust]] [[language]] ([[core]] [[Rust language]], [[Rust language]] [[core]]). [[Rust]] [[variable]]s, [[Rust]] [[data type]]s, [[Rust]] [[expression]]s, [[Rust]] [[control flow]], [[Rust]] [[function]], [[Rust]] [[method]], [[Rust]] [[class]], [[Rust]] [[object]], [[Rust]] [[I/O]], [[Rust]] [[input/output]], [[Rust]] [[IO]]. [[Rust]] [[module]]s, [[Rust]] [[script]], [[Rust]] [[package]]\par
\par
[[core]] of the [[PowerShell]] [[language]] ([[core]] [[PowerShell language]], [[PowerShell language]] [[core]]). [[PowerShell]] [[variable]]s, [[PowerShell]] [[data type]]s, [[PowerShell]] [[expression]]s, [[PowerShell]] [[control flow]], [[PowerShell]] [[function]], [[PowerShell]] [[method]], [[PowerShell]] [[class]], [[PowerShell]] [[object]], [[PowerShell]] [[I/O]], [[PowerShell]] [[input/output]], [[PowerShell]] [[IO]]. [[PowerShell]] [[module]]s, [[PowerShell]] [[script]], [[PowerShell]] [[package]]\par
\par
\par
[[core]] of the [[Swift]] [[language]] ([[core]] [[Swift language]], [[Swift language]] [[core]]). [[Swift]] [[variable]]s, [[Swift]] [[data type]]s, [[Swift]] [[expression]]s, [[Swift]] [[control flow]], [[Swift]] [[function]], [[Swift]] [[method]], [[Swift]] [[class]], [[Swift]] [[object]], [[Swift]] [[I/O]], [[Swift]] [[input/output]], [[Swift]] [[IO]]. [[Swift]] [[module]]s, [[Swift]] [[script]], [[Swift]] [[package]]\par
\par
[[core]] of the [[COBOL]] [[language]] ([[core]] [[COBOL language]], [[COBOL language]] [[core]]). [[COBOL]] [[variable]]s, [[COBOL]] [[data type]]s, [[COBOL]] [[expression]]s, [[COBOL]] [[control flow]], [[COBOL]] [[function]], [[COBOL]] [[method]], [[COBOL]] [[class]], [[COBOL]] [[object]], [[COBOL]] [[I/O]], [[COBOL]] [[input/output]], [[COBOL]] [[IO]]. [[COBOL]] [[module]]s, [[COBOL]] [[script]], [[COBOL]] [[package]]\par
\par
[[core]] of the [[bash]] [[language]] ([[core]] [[bash language]], [[bash language]] [[core]]). [[bash]] [[variable]]s, [[bash]] [[data type]]s, [[bash]] [[expression]]s, [[bash]] [[control flow]], [[bash]] [[function]], [[bash]] [[method]], [[bash]] [[class]], [[bash]] [[object]], [[bash]] [[I/O]], [[bash]] [[input/output]], [[bash]] [[IO]]. [[bash]] [[module]]s, [[bash]] [[script]], [[bash]] [[package]]\par
\par
\par
[[core]] of the [[Clojure]] [[language]] ([[core]] [[Clojure language]], [[Clojure language]] [[core]]). [[Clojure]] [[variable]]s, [[Clojure]] [[data type]]s, [[Clojure]] [[expression]]s, [[Clojure]] [[control flow]], [[Clojure]] [[function]], [[Clojure]] [[method]], [[Clojure]] [[class]], [[Clojure]] [[object]], [[Clojure]] [[I/O]], [[Clojure]] [[input/output]], [[Clojure]] [[IO]]. [[Clojure]] [[module]]s, [[Clojure]] [[script]], [[Clojure]] [[package]]\par
\par
[[core]] of the [[Golang]] [[language]] ([[core]] [[Golang language]], [[Golang language]] [[core]]). [[Golang]] [[variable]]s, [[Golang]] [[data type]]s, [[Golang]] [[expression]]s, [[Golang]] [[control flow]], [[Golang]] [[function]], [[Golang]] [[method]], [[Golang]] [[class]], [[Golang]] [[object]], [[Golang]] [[I/O]], [[Golang]] [[input/output]], [[Golang]] [[IO]]. [[Golang]] [[module]]s, [[Golang]] [[script]], [[Golang]] [[package]]\par
\par
[[core]] of the [[Go]] [[language]] ([[core]] [[Go language]], [[Go language]] [[core]]). [[Go]] [[variable]]s, [[Go]] [[data type]]s, [[Go]] [[expression]]s, [[Go]] [[control flow]], [[Go]] [[function]], [[Go]] [[method]], [[Go]] [[class]], [[Go]] [[object]], [[Go]] [[I/O]], [[Go]] [[input/output]], [[Go]] [[IO]]. [[Go]] [[module]]s, [[Go]] [[script]], [[Go]] [[package]]\par
\par
\par
[[core]] of the [[Groovy]] [[language]] ([[core]] [[Groovy]] [[language]], [[Groovy]] [[language]] [[core]]). [[Groovy]] [[variable]]s, [[Groovy]] [[data type]]s, [[Groovy]] [[expression]]s, [[Groovy]] [[control flow]], [[Groovy]] [[function]], [[Groovy]] [[method]], [[Groovy]] [[class]], [[Groovy]] [[object]], [[Groovy]] [[I/O]], [[Groovy]] [[input/output]], [[Groovy]] [[IO]]. [[Groovy]] [[module]]s, [[Groovy]] [[script]], [[Groovy]] [[package]]\par
\par
[[core]] of the [[Haskell]] [[language]] ([[core]] [[Haskell]] [[language]], [[Haskell]] [[language]] [[core]]). [[Haskell]] [[variable]]s, [[Haskell]] [[data type]]s, [[Haskell]] [[expression]]s, [[Haskell]] [[control flow]], [[Haskell]] [[function]], [[Haskell]] [[method]], [[Haskell]] [[class]], [[Haskell]] [[object]], [[Haskell]] [[I/O]], [[Haskell]] [[input/output]], [[Haskell]] [[IO]]. [[Haskell]] [[module]]s, [[Haskell]] [[script]], [[Haskell]] [[package]]\par
\par
[[core]] of the [[Perl]] [[language]] ([[core]] [[Perl language]], [[Perl]] [[language]] [[core]]). [[Perl]] [[variable]]s, [[Perl]] [[data type]]s, [[Perl]] [[expression]]s, [[Perl]] [[control flow]], [[Perl]] [[function]], [[Perl]] [[method]], [[Perl]] [[class]], [[Perl]] [[object]], [[Perl]] [[I/O]], [[Perl]] [[input/output]], [[Perl]] [[IO]]. [[Perl]] [[module]]s, [[Perl]] [[script]], [[Perl]] [[package]]\par
\par
[[core]] of the [[Objective]]-[[C]] [[language]] ([[core]] [[Objective-C language]], [[Objective-C]] [[language]] [[core]]). [[Objective-C]] [[variable]]s, [[Objective-C]] [[data type]]s, [[Objective-C]] [[expression]]s, [[Objective-C]] [[control flow]], [[Objective-C]] [[function]], [[Objective-C]] [[method]], [[Objective-C]] [[class]], [[Objective-C]] [[object]], [[Objective-C]] [[I/O]], [[Objective-C]] [[input/output]], [[Objective-C]] [[IO]]. [[Objective-C]] [[module]]s, [[Objective-C]] [[script]], [[Objective-C]] [[package]]\par
\par
[[core]] of the [[PHP]] [[language]] ([[core]] [[PHP language]], [[PHP]] [[language]] [[core]]). [[PHP]] [[variable]]s, [[PHP]] [[data type]]s, [[PHP]] [[expression]]s, [[PHP]] [[control flow]], [[PHP]] [[function]], [[PHP]] [[method]], [[PHP]] [[class]], [[PHP]] [[object]], [[PHP]] [[I/O]], [[PHP]] [[input/output]], [[PHP]] [[IO]]. [[PHP]] [[module]]s, [[PHP]] [[script]], [[PHP]] [[package]]\par
\par
\par
[[core]] of the [[Rexx]] [[language]] ([[core]] [[Rexx language]], [[Rexx]] [[language]] [[core]]). [[Rexx]] [[variable]]s, [[Rexx]] [[data type]]s, [[Rexx]] [[expression]]s, [[Rexx]] [[control flow]], [[Rexx]] [[function]], [[Rexx]] [[method]], [[Rexx]] [[class]], [[Rexx]] [[object]], [[Rexx]] [[I/O]], [[Rexx]] [[input/output]], [[Rexx]] [[IO]]. [[Rexx]] [[module]]s, [[Rexx]] [[script]], [[Rexx]] [[package]]\par
\par
\par
[[core]] of the [[Ruby]] [[language]] ([[core]] [[Ruby language]], [[Ruby]] [[language]] [[core]]). [[Ruby]] [[variable]]s, [[Ruby]] [[data type]]s, [[Ruby]] [[expression]]s, [[Ruby]] [[control flow]], [[Ruby]] [[function]], [[Ruby]] [[method]], [[Ruby]] [[class]], [[Ruby]] [[object]], [[Ruby]] [[I/O]], [[Ruby]] [[input/output]], [[Ruby]] [[IO]]. [[Ruby]] [[module]]s, [[Ruby]] [[script]], [[Ruby]] [[package]]\par
\par
\par
[[core]] of the [[SQL]] [[language]] ([[core]] [[SQL language]], [[SQL]] [[language]] [[core]]). [[SQL]] [[variable]]s, [[SQL]] [[data type]]s, [[SQL]] [[expression]]s, [[SQL]] [[control flow]], [[SQL]] [[function]], [[SQL]] [[method]], [[SQL]] [[class]], [[SQL]] [[object]], [[SQL]] [[I/O]], [[SQL]] [[input/output]], [[SQL]] [[IO]]. [[SQL]] [[module]]s, [[SQL]] [[script]], [[SQL]] [[package]]\par
\par
[[core]] of the [[Python]] [[language]] ([[core]] [[Python language]], [[Python]] [[language]] [[core]]). [[Python]] [[variable]]s, [[Python]] [[data type]]s, [[Python]] [[expression]]s, [[Python]] [[control flow]], [[Python]] [[function]], [[Python]] [[method]], [[Python]] [[class]], [[Python]] [[object]], [[Python]] [[I/O]], [[Python]] [[input/output]], [[Python]] [[IO]]. [[Python]] [[module]]s, [[Python]] [[script]], [[Python]] [[package]]\par
\par
=================================\par
[[core]] of the [[Python language]] ([[core]] [[Python language]], [[Python language]] [[core]]). [[Python]] [[variable]]s, [[Python]] [[data type]]s, [[Python]] [[expression]]s, [[Python]] [[control flow]], [[Python]] [[function]], [[Python]] [[method]], [[Python]] [[class]], [[Python]] [[object]], [[Python]] [[I/O]], [[Python]] [[input/output]], [[Python]] [[IO]]. [[Python]] [[module]]s, [[Python]] [[script]], [[Python]] [[package]]\par
\par
\par
\par
[[core]] of the [[Python language]] ([[core]] [[Python language]], [[Python language]] [[core]]). [[Python]] [[variable]]s, [[Python]] [[data type]]s, [[Python]] [[expression]]s, [[Python]] [[control flow]], [[Python]] [[function]], [[Python]] [[method]], [[Python]] [[class]], [[Python]] [[object]], [[Python]] [[I/O]], [[Python]] [[input/output]], [[Python]] [[IO]]. [[Python]] [[module]]s, [[Python]] [[script]], [[Python]] [[package]]\par
\par
}
 